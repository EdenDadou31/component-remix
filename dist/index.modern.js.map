{"version":3,"file":"index.modern.js","sources":["../src/components/Loader.tsx","../src/components/Button.tsx","../src/components/FormField.tsx","../src/components/Modal.tsx","../src/components/SearchInput.tsx","../src/components/SelectDropdown.tsx","../src/components/SidebarLayout.tsx"],"sourcesContent":["import React from \"react\";\nexport default function Loader() {\n  return (\n    <div\n      className=\"border-current text-surface inline-block h-3 w-3 animate-spin rounded-full border-4 border-solid border-bluenight100 border-e-transparent p-2 align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\"\n      role=\"status\"\n    />\n  );\n}\n","import Loader from \"./Loader\";\nimport React from \"react\";\n\ninterface IButtonProps {\n  onPress?: () => void;\n  title: string;\n  type: \"submit\" | \"reset\" | \"button\" | undefined;\n  name?: string;\n  value?: string;\n  disabled?: boolean;\n  leftIcon?: string;\n  className?: string;\n  loading?: boolean;\n}\n\nexport default function Button({\n  onPress,\n  title,\n  type,\n  name,\n  value,\n  disabled = false,\n  leftIcon,\n  className = \"\",\n  loading = false,\n}: IButtonProps) {\n  return (\n    <button\n      className={`${\n        disabled ? \"bg-grey-dark\" : \"bg-bluenight\"\n      } relative flex w-full flex-row items-center justify-around rounded-full px-5 py-2 text-[white] ${className}`}\n      type={type}\n      name={name}\n      value={value}\n      disabled={disabled}\n      onClick={onPress}\n    >\n      {leftIcon ? (\n        <img src={leftIcon} alt=\"btn-icon\" className=\"mr-3 w-[20px]\" />\n      ) : null}\n      {!loading ? title : <Loader />}\n    </button>\n  );\n}\n","import type { ReactElement } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\n\ninterface FormFieldProps {\n  htmlFor: string;\n  label: string;\n  type?: string;\n  value: string;\n  onChange?: (\n    value:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => void;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  rightIcon?: ReactElement;\n  multiline?: boolean;\n}\n\nexport default function FormField({\n  htmlFor,\n  label,\n  type = \"text\",\n  value,\n  onChange = () => {},\n  error,\n  required = false,\n  placeholder,\n  rightIcon,\n  multiline = false,\n}: FormFieldProps) {\n  const [errorText, setErrorText] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (error?.length) {\n      setErrorText(error);\n    }\n  }, [error]);\n\n  return (\n    <div className=\"mb-2 flex flex-col\">\n      <label\n        htmlFor={htmlFor}\n        className=\"mb-2 text-sm text-bluenight opacity-60\"\n      >\n        {label}\n      </label>\n      <div className=\"relative\">\n        {!multiline ? (\n          <input\n            onChange={(e) => {\n              onChange(e);\n              setErrorText(undefined);\n            }}\n            required={required}\n            type={type}\n            id={htmlFor}\n            name={htmlFor}\n            className=\"w-full rounded-md border-[1px] border-grey-medium p-2\"\n            value={value}\n            placeholder={placeholder}\n          />\n        ) : (\n          <textarea\n            onChange={(e) => {\n              onChange(e);\n              setErrorText(undefined);\n            }}\n            required={required}\n            id={htmlFor}\n            name={htmlFor}\n            className=\"w-full rounded-md border-[1px] border-grey-medium p-2\"\n            value={value}\n            placeholder={placeholder}\n          />\n        )}\n        {rightIcon ? rightIcon : null}\n      </div>\n      {errorText?.length ? (\n        <p className=\"w-full text-left text-xs font-semibold tracking-wide text-primary-red-default\">\n          {errorText}\n        </p>\n      ) : null}\n    </div>\n  );\n}\n","import type { ReactElement } from \"react\";\nimport React from \"react\";\n//TODO ADD ICON SVG\n// import CloseIcon from \"./../styles/icons/close.svg\";\n\ninterface IModalProps {\n  onHide: () => void;\n  content: ReactElement;\n}\n\nexport default function Modal({ onHide, content }: IModalProps) {\n  return (\n    <div\n      className=\"fixed left-0 right-0 top-0 z-50 flex h-full min-h-screen w-full items-center justify-center bg-backmodal lg:h-fit\"\n      onClick={() => onHide()}\n      onKeyUp={onHide}\n      tabIndex={-1}\n      role=\"button\"\n    >\n      <main className=\"relative my-10 flex h-auto  w-auto flex-col items-center justify-center gap-4 rounded-xl bg-beige p-5 px-10 text-center shadow-lg lg:left-[50px] lg:max-w-[60%]\">\n        <button onClick={() => onHide()} type=\"button\">\n          //TODO ADD ICON SVG\n          {/* <img\n            src={CloseIcon}\n            alt=\"close-icon\"\n            className=\"absolute right-3 top-3\"\n          /> */}\n        </button>\n        {content}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n//TODO ADD ICON SVG\n// import closeIcon from \"./../styles/icons/close.svg\";\n// import searchIcon from \"./../styles/icons/search.svg\";\n\ninterface ISearchInputProps {\n  onChange: (value: string) => void;\n  setSearchResult: (value: any[]) => void;\n  placeholder: string;\n}\n\nexport default function SearchInput({\n  onChange,\n  setSearchResult,\n  placeholder,\n}: ISearchInputProps) {\n  const [value, setValue] = useState(\"\");\n\n  function handleChangeSearch(value: string) {\n    setValue(value);\n    onChange(value);\n  }\n\n  return (\n    <div className=\"relative\">\n      <input\n        onChange={(e) => {\n          handleChangeSearch(e.target.value);\n        }}\n        type=\"text\"\n        className=\"my-1 w-full rounded-md border-[1px] border-grey-medium p-2\"\n        value={value}\n        placeholder={placeholder}\n      />\n      //TODO ADD ICON SVG\n      {/* {value.length ? (\n        <button\n          type=\"button\"\n          className=\"absolute right-2 top-3\"\n          onClick={() => {\n            setValue(\"\");\n            setSearchResult([]);\n          }}\n        >\n          <img src={closeIcon} alt=\"clean-icon\" />\n        </button>\n      ) : (\n        <img\n          src={searchIcon}\n          alt=\"search-icon\"\n          className=\"absolute bottom-4 right-2 h-[20px] w-[20px]\"\n        />\n      )} */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\n// import { useOnClickOutside } from \"usehooks-ts\";\n//TODO ADD ICON SVG\n// import chevronDown from \"./../styles/icons/chevron-down.svg\";\n// import closeIcon from \"./../styles/icons/close.svg\";\n\ninterface SelectFieldProps {\n  htmlFor: string;\n  label?: string;\n  options: { value: string; label: string }[];\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  defaultValue: string;\n  error?: string;\n  required?: boolean;\n  position?: string;\n  clearable?: boolean;\n  onReset?: () => void;\n}\n\nexport default function SelectDropdown({\n  htmlFor,\n  label,\n  options,\n  value,\n  onChange,\n  defaultValue,\n  error = \"\",\n  disabled = false,\n  position,\n  clearable = false,\n  onReset = () => {},\n}: SelectFieldProps) {\n  let refDropdown = useRef(null);\n\n  const [errorText, setErrorText] = useState(error);\n  const [showDropDown, setShowDropDown] = useState(false);\n\n  // useOnClickOutside(refDropdown, () => setShowDropDown(false));\n\n  useEffect(() => {\n    setErrorText(error);\n  }, [error]);\n\n  return (\n    <div className=\"relative flex flex-col\" ref={refDropdown}>\n      {label ? (\n        <label htmlFor={htmlFor} className=\"mb-2 text-sm text-bluenight100\">\n          {label}\n        </label>\n      ) : null}\n      <div\n        className={`inline-flex w-full items-center gap-4 rounded-md border-2 border-grey-light p-2 ${\n          disabled ? \"bg-grey-light\" : \"bg-primary-white\"\n        } ${defaultValue || value ? \"justify-between\" : \"justify-end\"}`}\n      >\n        <button\n          onClick={() => setShowDropDown(!showDropDown)}\n          type=\"button\"\n          disabled={disabled}\n          className=\"w-full text-left\"\n        >\n          {!value ? defaultValue : value}\n        </button>\n        <div className=\"flex flex-row\">\n          //TODO ADD ICON SVG\n          {/* {clearable && value && value !== defaultValue && !disabled ? (\n            <div\n              onKeyDown={() => onReset()}\n              onClick={() => onReset()}\n              role=\"button\"\n              tabIndex={-1}\n            >\n              <img src={closeIcon} alt=\"clean-icon\" className=\"w-5\" />\n            </div>\n          ) : null} */}\n          <button\n            onClick={() => setShowDropDown(!showDropDown)}\n            type=\"button\"\n            disabled={disabled}\n            className=\"w-max\"\n          >\n            //TODO ADD ICON SVG\n            {/* <img\n              src={chevronDown}\n              alt=\"chevron-down\"\n              className=\"rounded-full bg-beige p-2\"\n            />  */}\n            V\n          </button>\n        </div>\n      </div>\n      <div className=\"text-red-500 w-full text-center text-xs font-semibold tracking-wide\">\n        {errorText || \"\"}\n      </div>\n      {showDropDown && options && !disabled ? (\n        <div\n          className={`absolute z-40 flex h-auto max-h-[200px] w-full flex-col gap-4 overflow-y-auto rounded-md border-[0.7px] border-grey-medium bg-primary-white p-4 shadow-inner ${\n            position ? position : \"top-20\"\n          }`}\n        >\n          {options.map((item) => (\n            <button\n              key={item.label}\n              className={`text-left text-bluenight hover:bg-beige`}\n              type=\"button\"\n              onClick={() => {\n                onChange(item.value);\n                setShowDropDown(false);\n              }}\n            >\n              <p\n                className={` p-2 ${\n                  disabled ? \"bg-grey-medium\" : \"text-bluenight\"\n                }`}\n              >{`${item.label}`}</p>\n            </button>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\n\ninterface SidebarLayoutOverlayProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n  onHide: () => void;\n  size?: \"sm\" | \"lg\";\n}\n\nexport default function SidebarLayout({\n  children,\n  isOpen,\n  onHide,\n  size = \"lg\",\n}: SidebarLayoutOverlayProps) {\n  return (\n    <>\n      {isOpen ? (\n        <div\n          onClick={onHide}\n          className=\"z-49 fixed bottom-0 left-0 right-0 top-0 h-screen min-h-screen w-full bg-primary-black opacity-10\"\n          role=\"button\"\n          onKeyDown={onHide}\n          tabIndex={-1}\n        />\n      ) : null}\n      <div\n        className={`fixed bottom-0 left-0 z-50 flex w-full justify-center overflow-y-auto bg-primary-white duration-300 ease-in-out no-scrollbar lg:bottom-[inherit] lg:left-[inherit] lg:right-0 lg:top-0  \n            ${\n              isOpen\n                ? \"top-0 translate-y-0 lg:translate-x-0 lg:translate-y-[inherit]\"\n                : \"translate-y-full lg:translate-x-full lg:translate-y-[inherit] \"\n            }\n            ${size === \"sm\" ? \"lg:w-[400px]\" : \"lg:w-9/12\"}`}\n      >\n        {children}\n      </div>\n    </>\n  );\n}\n"],"names":["Loader","React","createElement","className","role","Button","onPress","title","type","name","value","disabled","leftIcon","loading","onClick","src","alt","FormField","htmlFor","label","onChange","error","required","placeholder","rightIcon","multiline","errorText","setErrorText","useState","undefined","useEffect","length","e","id","Modal","onHide","content","onKeyUp","tabIndex","SearchInput","setValue","handleChangeSearch","target","SelectDropdown","options","defaultValue","position","clearable","onReset","refDropdown","useRef","showDropDown","setShowDropDown","ref","map","item","key","SidebarLayout","children","isOpen","size","Fragment","onKeyDown"],"mappings":"+DACwB,SAAAA,iBACtB,OACEC,EACEC,cAAA,MAAA,CAAAC,UAAU,mNACVC,KAAK,UAGX,CCOwB,SAAAC,GAAOC,QAC7BA,EAAOC,MACPA,EAAKC,KACLA,EAAIC,KACJA,EAAIC,MACJA,EAAKC,SACLA,GAAW,EAAKC,SAChBA,EAAQT,UACRA,EAAY,GAAEU,QACdA,GAAU,iBAEV,OACEZ,EACEC,cAAA,SAAA,CAAAC,UAAW,GACTQ,EAAW,eAAiB,gHACoER,IAClGK,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVG,QAASR,GAERM,eACCX,uBAAKc,IAAKH,EAAUI,IAAI,WAAWb,UAAU,kBAC3C,KACFU,eAAkBZ,EAACC,cAAAF,EAAS,MAAlBO,EAGlB,CCtBc,SAAUU,GAAUC,QAChCA,EAAOC,MACPA,EAAKX,KACLA,EAAO,OAAME,MACbA,EAAKU,SACLA,EAAWA,OAAQC,MACnBA,EAAKC,SACLA,GAAW,EAAKC,YAChBA,EAAWC,UACXA,EAASC,UACTA,GAAY,IAEZ,MAAOC,EAAWC,GAAgBC,OAA6BC,GAQ/D,OANAC,EAAU,KACJT,MAAAA,GAAAA,EAAOU,QACTJ,EAAaN,EACf,EACC,CAACA,iBAGFpB,EAAAC,cAAA,MAAA,CAAKC,UAAU,mCACbF,EACEC,cAAA,QAAA,CAAAgB,QAASA,EACTf,UAAU,0CAETgB,gBAEHlB,EAAKC,cAAA,MAAA,CAAAC,UAAU,YACXsB,eAeAxB,EACEC,cAAA,WAAA,CAAAkB,SAAWY,IACTZ,EAASY,GACTL,OAAaE,EACf,EACAP,SAAUA,EACVW,GAAIf,EACJT,KAAMS,EACNf,UAAU,wDACVO,MAAOA,EACPa,YAAaA,iBAxBftB,EACEC,cAAA,QAAA,CAAAkB,SAAWY,IACTZ,EAASY,GACTL,OAAaE,EAAS,EAExBP,SAAUA,EACVd,KAAMA,EACNyB,GAAIf,EACJT,KAAMS,EACNf,UAAU,wDACVO,MAAOA,EACPa,YAAaA,IAgBhBC,GAAwB,MAEjB,MAATE,GAAAA,EAAWK,oBACV9B,EAAAC,cAAA,IAAA,CAAGC,UAAU,iFACVuB,GAED,KAGV,UC7EwBQ,GAAMC,OAAEA,EAAMC,QAAEA,iBACtC,OACEnC,EACEC,cAAA,MAAA,CAAAC,UAAU,oHACVW,QAASA,IAAMqB,IACfE,QAASF,EACTG,UAAW,EACXlC,KAAK,uBAELH,EAAMC,cAAA,OAAA,CAAAC,UAAU,gLACdF,EAAQC,cAAA,SAAA,CAAAY,QAASA,IAAMqB,IAAU3B,KAAK,UAO7B,uBACR4B,GAIT,UCpBwBG,GAAYnB,SAClCA,EACeG,YACfA,IAEA,MAAOb,EAAO8B,GAAYZ,EAAS,iBAOnC,OACE3B,EAAAC,cAAA,MAAA,CAAKC,UAAU,yBACbF,EAAAC,cAAA,QAAA,CACEkB,SAAWY,KARjB,SAA4BtB,GAC1B8B,EAAS9B,GACTU,EAASV,EACX,CAMQ+B,CAAmBT,EAAEU,OAAOhC,MAC9B,EACAF,KAAK,OACLL,UAAU,6DACVO,MAAOA,EACPa,YAAaA,IAqBX,sBAEV,UClCwBoB,GAAezB,QACrCA,EAAOC,MACPA,EAAKyB,QACLA,EAAOlC,MACPA,EAAKU,SACLA,EAAQyB,aACRA,EAAYxB,MACZA,EAAQ,GAAEV,SACVA,GAAW,EAAKmC,SAChBA,EAAQC,UACRA,GAAY,EAAKC,QACjBA,EAAUA,SAEV,IAAIC,EAAcC,EAAO,MAEzB,MAAOxB,EAAWC,GAAgBC,EAASP,IACpC8B,EAAcC,GAAmBxB,GAAS,GAQjD,OAJAE,EAAU,KACRH,EAAaN,EAAK,EACjB,CAACA,iBAGFpB,uBAAKE,UAAU,yBAAyBkD,IAAKJ,GAC1C9B,eACClB,EAAOC,cAAA,QAAA,CAAAgB,QAASA,EAASf,UAAU,kCAChCgB,GAED,kBACJlB,EACEC,cAAA,MAAA,CAAAC,UAAW,mFACTQ,EAAW,gBAAkB,sBAC3BkC,GAAgBnC,EAAQ,kBAAoB,8BAEhDT,EAAAC,cAAA,SAAA,CACEY,QAASA,IAAMsC,GAAiBD,GAChC3C,KAAK,SACLG,SAAUA,EACVR,UAAU,oBAERO,GAAQmC,gBAEZ5C,EAAKC,cAAA,MAAA,CAAAC,UAAU,oDAYbF,EACEC,cAAA,SAAA,CAAAY,QAASA,IAAMsC,GAAiBD,GAChC3C,KAAK,SACLG,SAAUA,EACVR,UAAU,+BASH,oBAGbF,EAAAC,cAAA,MAAA,CAAKC,UAAU,uEACZuB,GAAa,IAEfyB,GAAgBP,IAAYjC,eAC3BV,EAAAC,cAAA,MAAA,CACEC,UAAW,gKACT2C,GAAsB,YAGvBF,EAAQU,IAAKC,gBACZtD,EACEC,cAAA,SAAA,CAAAsD,IAAKD,EAAKpC,MACVhB,UAAW,0CACXK,KAAK,SACLM,QAASA,KACPM,EAASmC,EAAK7C,OACd0C,GAAgB,EAClB,gBAEAnD,EAAAC,cAAA,IAAA,CACEC,UAAW,SACTQ,EAAW,iBAAmB,mBAEhC,GAAG4C,EAAKpC,YAId,KAGV,CCnHwB,SAAAsC,GAAcC,SACpCA,EAAQC,OACRA,EAAMxB,OACNA,EAAMyB,KACNA,EAAO,oBAEP,OACE3D,EAAAC,cAAAD,EAAA4D,SAAA,KACGF,eACC1D,EACEC,cAAA,MAAA,CAAAY,QAASqB,EACThC,UAAU,oGACVC,KAAK,SACL0D,UAAW3B,EACXG,UAAW,IAEX,kBACJrC,EAAAC,cAAA,MAAA,CACEC,UAAW,yMAELwD,EACI,gEACA,iFAEK,OAATC,EAAgB,eAAiB,eAEtCF,GAIT"}